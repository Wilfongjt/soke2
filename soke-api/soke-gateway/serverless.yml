service: soke-gateway # NOTE: update this with your service name

provider:
  # starter
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  profile: ${self:custom.profiles.${self:provider.stage}}
  ##
  #basePath: ${opt:base, 'soke'}
  apiKeys: # apikey
    - serverless-${self:custom.customDomain.basePath}-${self:provider.stage}-apikey
  ##  - serverless-${self:provider.basePath}-${self:provider.stage}-apikey
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "dynamodb:*"
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource: "*"

  environment:
    SERVICE_NAME: ${self:service}
    TABLE_NAME: documents_${self:provider.stage}
    STAGE_NAME: ${self:provider.stage}

functions:

  # index:
  #  handler: handler.index
  #  description: "documents keyword index to documents."
  #  events:
  #    - http:
  #        method: get
  #        path: keywords
  # search for list of keywords
  # /keywords?keywords=a the to

  index:
    handler: handler.index
    description: "returns index to documents for given words."
    events:
      - http:
          method: get
          path: index
          cors: true
          private: true # apikey
  # get items that make up a document
  # document/{pk}
  document:
    handler: handler.document
    description: "get a single document using a key value"
    events:
      - http:
          method: get
          path: document/{pk}
          cors: true
          private: true # apikey

plugins:
  - serverless-domain-manager

custom:
    # defaultStage: dev
    #stage: ${opt:stage, 'dev'}

    profiles:
      dev: devProfile
      test: testProfile
      prod: prodProfile

    domains:
      dev: dev-api.lyttlebit.com
      prod: api.lyttlebit.com
      test: test-api.lyttlebit.com

    customDomain:
      basePath: 'soke' # This will be prefixed to all routes
      endpointType: 'edge'
      # lookup domain based on stage

      domainName: "${self:custom.domains.${self:provider.stage}}" # Change this to your domain.
      certificateName: "${self:custom.domains.${self:provider.stage}}"
      createRoute53Record: true
